{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.dd89cf8d95dc746a02d7.hot-update.js","sources":["webpack:///./components/ShopMap.js"],"sourcesContent":["import React from \"react\"\r\nimport { connect } from 'react-redux'\r\n\r\nimport { compose, withProps } from \"recompose\"\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\r\n\r\nimport ShopItem from './ShopItem'\r\n\r\nimport { selectMarker } from '../actions'\r\nimport { selectShop } from '../actions'\r\nimport { nextPage } from '../actions'\r\nimport { toggleMode } from '../actions'\r\n\r\nimport { withStateHandlers } from \"recompose\"\r\nimport { InfoBox } from \"react-google-maps/lib/components/addons/InfoBox\"\r\n\r\n\r\nconst MyMapComponent = compose(\r\n\twithProps({\r\n\t\tgoogleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCt95qTXK2VBIGWxB8CiCWe8eBV475edOg&v=3.exp&libraries=geometry,drawing,places\",\r\n\t\tloadingElement: <div style={{ height: '100%' }} />,\r\n\t\tcontainerElement: <div style={{ height: 'calc(100% - 48px)' }} />,\r\n\t\tmapElement: <div style={{ height: '100%' }} />,\r\n\t}),\r\n\r\n\twithStateHandlers(() => ({\r\n\t\tisOpen: false,\r\n\t}), {\r\n\t\tonToggleOpen: ({ isOpen }) => () => ({\r\n\t\t\tisOpen: !isOpen,\r\n\t\t})\r\n\t}),\r\n\r\n\twithScriptjs,\r\n\twithGoogleMap\r\n\t)((props) =>\r\n\t\t<div>\r\n\t\t\t\r\n\r\n\t\t\t<GoogleMap\r\n\t\t\t\tdefaultZoom={15}\r\n\t\t\t\tdefaultCenter={{ lat: 24.986913, lng: 121.455948 }}\r\n\t\t\t>\r\n\r\n\t\t\t\t{props.shops.map((shop, index) => (\r\n\t\t\t\t\t<Marker\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tposition={{ lat: parseFloat(shop.lat), lng: parseFloat(shop.lon) }}\r\n\t\t\t\t\t\tonClick={() => {props.selectMarker(index); props.onToggleOpen(index)}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{(props.isOpen && props.marker === index) && <InfoBox\r\n\t\t\t\t\t\t\tonCloseClick={props.onToggleOpen}\r\n\t\t\t\t\t\t\toptions={{ closeBoxURL: ``, enableEventPropagation: true }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ul className=\"list-unstyled\" style={{}}>\r\n\t\t\t\t\t\t\t\t<ShopItem onClick={() => {props.selectShop(props.marker); props.nextPage();}} content={props.shops[props.marker]} />\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</InfoBox>}\r\n\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t))}\r\n\t\t\t</GoogleMap>\r\n\r\n\t\t\t<div className=\"d-block d-md-none position-fixed\" style={{right: '12px', bottom: '9px'}} onClick={() => props.toggleMode()}><img src=\"/static/right-on.svg\" style={{width: '90px'}} /></div>\r\n\t\t</div>\r\n\t)\r\n\r\n/*\r\n\r\n*/\r\n\r\n\r\n\r\n/*原infobox內容\r\n<Marker\r\n\t\t\t\t\tposition={{ lat: 24.97, lng: 121.43 }}\r\n\t\t\t\t\tonClick={props.onToggleOpen}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.isOpen && <InfoBox\r\n\t\t\t\t\t\tonCloseClick={props.onToggleOpen}\r\n\t\t\t\t\t\toptions={{ closeBoxURL: ``, enableEventPropagation: true }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\r\n\t\t\t\t\t\t\t<div style={{ fontSize: `16px`, fontColor: `#08233B` }}>\r\n\t\t\t\t\t\t\t\tHello, Kaohsiung!\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</InfoBox>}\r\n\t\t\t\t</Marker>\r\n*/\r\n\r\n\r\n\r\nclass ShopMap extends React.PureComponent {\r\n\tstate = {\r\n\t\tisMarkerShown: false,\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.delayedShowMarker()\r\n\t}\r\n\r\n\tdelayedShowMarker = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({ isMarkerShown: true })\r\n\t\t}, 3000)\r\n\t}\r\n\r\n\thandleMarkerClick = (index) => {\r\n\t\tthis.setState({ isMarkerShown: false })\r\n\t\tthis.delayedShowMarker()\r\n\t}\r\n\r\n\trender() {\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<MyMapComponent\r\n\t\t\t\tisMarkerShown={this.state.isMarkerShown}\r\n\t\t\t\tonMarkerClick={this.handleMarkerClick}\r\n\t\t\t\t\r\n\t\t\t\tshops = {this.props.shops}\r\n\t\t\t\tmarker = {this.props.marker}\r\n\t\t\t\tselectMarker = {this.props.selectMarker}\r\n\t\t\t\tselectShop = {this.props.selectShop}\r\n\t\t\t\tnextPage = {this.props.nextPage}\r\n\t\t\t\ttoggleMode = {this.props.toggleMode}\r\n\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\tshops: state.data,\r\n\tmarker: state.data_now.index_marker,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n\tselectMarker: index => dispatch(selectMarker(index)),\r\n\tselectShop: index => dispatch(selectShop(index)),\r\n\tnextPage: () => dispatch(nextPage()),\r\n\ttoggleMode: () => dispatch(toggleMode())\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(ShopMap)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AADA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BA;AAiCA;AACA;;;AAKA;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAdA;AACA;AACA;;;AAaA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;AAtCA;AACA;AAyCA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AACA;AAOA;;;;A","sourceRoot":""}